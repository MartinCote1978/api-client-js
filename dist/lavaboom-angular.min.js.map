{"version":3,"sources":["lavaboom-angular.js"],"names":["createLavaboomAPIProvider","transport","self","this","url","authToken","specialToken","api","$get","$q","$rootScope","Lavaboom","getInstance","setAuthToken","newToken","connect","opts","when","isConnected","subscribe","name","callback","e","$apply","unSubscribe","info","addresses","get","accounts","create","register","query","verify","setup","who","update","what","delete","wipeData","whose","startOnboarding","files","list","id","contacts","emails","labels","keys","key","threads","tokens","getCurrent","deleteCurrent","angular","module","provider","call","window"],"mappings":"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","file":"lavaboom-angular.min.js","sourcesContent":["/* jshint esnext: true */\r\n/* global angular */\r\n/* global Lavaboom */\r\n\r\n(function() {\r\n\tlet createLavaboomAPIProvider = (transport) => function LavaboomAPIProvider() {\r\n\t\tlet self = this;\r\n\r\n\t\tself.url = null;\r\n\t\tself.authToken = null;\r\n\t\tself.specialToken = null;\r\n\r\n\t\tlet api = null;\r\n\r\n\t\tself.$get = /*@ngInject*/ function($q, $rootScope) {\r\n\t\t\tif (!api)\r\n\t\t\t\tapi = Lavaboom.getInstance(self.url, self.specialToken, transport);\r\n\r\n\t\t\tif (self.authToken)\r\n\t\t\t\tapi.authToken = self.authToken;\r\n\r\n\t\t\treturn {\r\n\t\t\t\tsetAuthToken: (newToken) => {\r\n\t\t\t\t\tself.authToken = newToken;\r\n\t\t\t\t\tapi.authToken = newToken;\r\n\t\t\t\t},\r\n\r\n\t\t\t\tconnect: (opts) => $q.when(api.connect(opts)),\r\n\r\n\t\t\t\tisConnected: () => api.isConnected(),\r\n\r\n\t\t\t\tsubscribe: (name, callback) => api.subscribe(name, function(e) {\r\n\t\t\t\t\t$rootScope.$apply(function() {\r\n\t\t\t\t\t\tcallback(e);\r\n\t\t\t\t\t});\r\n\t\t\t\t}),\r\n\r\n\t\t\t\tunSubscribe: (name, callback) => api.unSubscribe(name, function(e) {\r\n\t\t\t\t\t$rootScope.$apply(function() {\r\n\t\t\t\t\t\tcallback(e);\r\n\t\t\t\t\t});\r\n\t\t\t\t}),\r\n\r\n\t\t\t\tinfo: () => $q.when(api.info()),\r\n\r\n\t\t\t\taddresses: {\r\n\t\t\t\t\tget: () => $q.when(api.addresses.get())\r\n\t\t\t\t},\r\n\r\n\t\t\t\taccounts: {\r\n\t\t\t\t\tcreate: {\r\n\t\t\t\t\t\tregister: (query) => $q.when(api.accounts.create.register(query)),\r\n\t\t\t\t\t\tverify: (query) => $q.when(api.accounts.create.verify(query)),\r\n\t\t\t\t\t\tsetup: (query) => $q.when(api.accounts.create.setup(query))\r\n\t\t\t\t\t},\r\n\t\t\t\t\tget: (who) => $q.when(api.accounts.get(who)),\r\n\t\t\t\t\tupdate: (who, what) => $q.when(api.accounts.update(who, what)),\r\n\t\t\t\t\tdelete: (who) => $q.when(api.accounts.delete(who)),\r\n\t\t\t\t\twipeData: (whose) => $q.when(api.accounts.wipeData(whose)),\r\n\t\t\t\t\tstartOnboarding: (who) => $q.when(api.accounts.startOnboarding(who))\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfiles: {\r\n\t\t\t\t\tlist: (query) => $q.when(api.files.list(query)),\r\n\t\t\t\t\tcreate: (query) => $q.when(api.files.create(query)),\r\n\t\t\t\t\tget: (id) => $q.when(api.files.get(id)),\r\n\t\t\t\t\tupdate: (id, query) => $q.when(api.files.update(id, query)),\r\n\t\t\t\t\tdelete: (id) => $q.when(api.files.delete(id))\r\n\t\t\t\t},\r\n\r\n\t\t\t\tcontacts: {\r\n\t\t\t\t\tlist: () => $q.when(api.contacts.list()),\r\n\t\t\t\t\tcreate: (query) => $q.when(api.contacts.create(query)),\r\n\t\t\t\t\tget: (id) => $q.when(api.contacts.get(id)),\r\n\t\t\t\t\tupdate: (id, query) => $q.when(api.contacts.update(id, query)),\r\n\t\t\t\t\tdelete: (id) => $q.when(api.contacts.delete(id))\r\n\t\t\t\t},\r\n\r\n\t\t\t\temails: {\r\n\t\t\t\t\tlist: (query) => $q.when(api.emails.list(query)),\r\n\t\t\t\t\tget: (id) => $q.when(api.emails.get(id)),\r\n\t\t\t\t\tcreate: (query) => $q.when(api.emails.create(query)),\r\n\t\t\t\t\tdelete: (id) => $q.when(api.emails.delete(id))\r\n\t\t\t\t},\r\n\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tlist: () => $q.when(api.labels.list()),\r\n\t\t\t\t\tget: (query) => $q.when(api.labels.get(query)),\r\n\t\t\t\t\tcreate: (query) => $q.when(api.labels.create(query)),\r\n\t\t\t\t\tdelete: (query) => $q.when(api.labels.delete(query)),\r\n\t\t\t\t\tupdate: (id, query) => $q.when(api.labels.update(id, query))\r\n\t\t\t\t},\r\n\r\n\t\t\t\tkeys: {\r\n\t\t\t\t\tlist: (query) => $q.when(api.keys.list(query)),\r\n\t\t\t\t\tget: (id) => $q.when(api.keys.get(id)),\r\n\t\t\t\t\tcreate: (key) => $q.when(api.keys.create(key))\r\n\t\t\t\t},\r\n\r\n\t\t\t\tthreads: {\r\n\t\t\t\t\tlist: (query) => $q.when(api.threads.list(query)),\r\n\t\t\t\t\tget: (id) => $q.when(api.threads.get(id)),\r\n\t\t\t\t\tupdate: (id, query) => $q.when(api.threads.update(id, query)),\r\n\t\t\t\t\tdelete: (id) => $q.when(api.threads.delete(id))\r\n\t\t\t\t},\r\n\r\n\t\t\t\ttokens: {\r\n\t\t\t\t\tgetCurrent: () => $q.when(api.tokens.getCurrent()),\r\n\t\t\t\t\tget: (id) => $q.when(api.tokens.get(id)),\r\n\t\t\t\t\tcreate: (query) => $q.when(api.tokens.create(query)),\r\n\t\t\t\t\tdeleteCurrent: () => $q.when(api.tokens.deleteCurrent()),\r\n\t\t\t\t\tdelete: (id) => $q.when(api.tokens.delete(id))\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t};\r\n\r\n\t\treturn self;\r\n\t};\r\n\r\n\tangular.module('lavaboom.api', [])\r\n\t\t.provider('LavaboomAPI', createLavaboomAPIProvider('sockjs'))\r\n\t\t.provider('LavaboomHttpAPI', createLavaboomAPIProvider('http'));\r\n}).call(window);"],"sourceRoot":"/source/"}